// <auto-generated />
using System;
using ConsoleApp7;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConsoleApp7.Migrations
{
    [DbContext(typeof(BloggingContext))]
    [Migration("20200513135616_AddLLEntities")]
    partial class AddLLEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConsoleApp7.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Url");

                    b.HasKey("BlogId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("ConsoleApp7.BlogLL", b =>
                {
                    b.Property<int>("FlogLLId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Url");

                    b.HasKey("FlogLLId");

                    b.ToTable("BlogsLL");

                    b.HasData(
                        new { FlogLLId = 1, Url = "http://blogs.msdn.com/adonet" }
                    );
                });

            modelBuilder.Entity("ConsoleApp7.BlogPBF", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Url");

                    b.HasKey("BlogId");

                    b.ToTable("BlogsPBF");
                });

            modelBuilder.Entity("ConsoleApp7.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId");

                    b.Property<string>("Content");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Title");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Post");
                });

            modelBuilder.Entity("ConsoleApp7.PostLL", b =>
                {
                    b.Property<int>("FostLLId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<int>("FlogLLId");

                    b.Property<string>("PostType")
                        .IsRequired();

                    b.Property<string>("Title");

                    b.HasKey("FostLLId");

                    b.HasIndex("FlogLLId");

                    b.ToTable("PostsLL");

                    b.HasDiscriminator<string>("PostType").HasValue("Moe");

                    b.HasData(
                        new { FostLLId = 1, Content = "I wrote an app using EF Core!", FlogLLId = 1, Title = "Hello World" }
                    );
                });

            modelBuilder.Entity("ConsoleApp7.PostPBF", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId");

                    b.Property<string>("Content");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Title");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("PostsPBF");

                    b.HasDiscriminator<string>("Discriminator").HasValue("PostPBF");
                });

            modelBuilder.Entity("ConsoleApp7.DumbAsAPost", b =>
                {
                    b.HasBaseType("ConsoleApp7.Post");

                    b.Property<bool>("Stupid");

                    b.ToTable("DumbAsAPost");

                    b.HasDiscriminator().HasValue("dumb");
                });

            modelBuilder.Entity("ConsoleApp7.VideoPost", b =>
                {
                    b.HasBaseType("ConsoleApp7.Post");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<string>("VideoTitle");

                    b.ToTable("VideoPost");

                    b.HasDiscriminator().HasValue("video");
                });

            modelBuilder.Entity("ConsoleApp7.DumbAsAPostLL", b =>
                {
                    b.HasBaseType("ConsoleApp7.PostLL");

                    b.Property<bool>("Stupid");

                    b.ToTable("DumbAsAPostLL");

                    b.HasDiscriminator().HasValue("Curly");

                    b.HasData(
                        new { FostLLId = 3, Content = "This is as dumb as a post", FlogLLId = 1, Title = "Hello World, The Silent Picture", Stupid = true }
                    );
                });

            modelBuilder.Entity("ConsoleApp7.VideoPostLL", b =>
                {
                    b.HasBaseType("ConsoleApp7.PostLL");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<string>("VideoTitle");

                    b.ToTable("VideoPostLL");

                    b.HasDiscriminator().HasValue("Larry");

                    b.HasData(
                        new { FostLLId = 2, Content = "Lareum ipsum, alpha, beta, crapper...", FlogLLId = 1, Title = "Hello World, The Movie", ReleaseDate = new DateTime(2019, 7, 18, 0, 0, 0, 0, DateTimeKind.Local), VideoTitle = "this is the Video Title" }
                    );
                });

            modelBuilder.Entity("ConsoleApp7.DumbAsAPostPBF", b =>
                {
                    b.HasBaseType("ConsoleApp7.PostPBF");

                    b.Property<bool>("Stupid");

                    b.ToTable("DumbAsAPostPBF");

                    b.HasDiscriminator().HasValue("dumb");
                });

            modelBuilder.Entity("ConsoleApp7.VideoPostPBF", b =>
                {
                    b.HasBaseType("ConsoleApp7.PostPBF");

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<string>("VideoTitle");

                    b.ToTable("VideoPostPBF");

                    b.HasDiscriminator().HasValue("video");
                });

            modelBuilder.Entity("ConsoleApp7.Post", b =>
                {
                    b.HasOne("ConsoleApp7.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ConsoleApp7.PostLL", b =>
                {
                    b.HasOne("ConsoleApp7.BlogLL", "Flog")
                        .WithMany("Fosts")
                        .HasForeignKey("FlogLLId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ConsoleApp7.PostPBF", b =>
                {
                    b.HasOne("ConsoleApp7.BlogPBF", "Blog")
                        .WithMany("posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
